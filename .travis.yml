sudo: true

language: python

os:
  # - windows # Python not supported yet for travis windows builds 12/11/2018
  - linux
  # - osx # Python not supported yet for travis osx builds 12/11/2018
dist: xenial

python:
  - 3.4
  - 3.5
  - 3.6

services:
  - xvfb

addons:
  apt:
    packages:
      # for virtual webcame via v4l2loopback
      - linux-headers-$(uname -r)
      - v4l2loopback-dkms
      - libv4l-dev
      - gstreamer1.0-tools
      - gstreamer1.0-libav
      - gstreamer1.0-plugins-good
      # for sphinx automodapi
      - graphviz

# before_install:
#     # attempt to install v4l2 drivers to this kernel
#     - git clone --depth=1 git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git linux_media
#     - cd linux_media
#     - git remote add linuxtv git://linuxtv.org/media_tree.git
#     - git remote update
#     - git checkout -b media-master remotes/linuxtv/master
#     - make olddefconfig
#     - make
#     - make modules_install install
#     - cd ..
#
#     # setup v4l2loopback
#     - sudo depmod -a
#     - sudo modprobe videodev
#     - sudo modprobe v4l2loopback


install:
  # imagepypelines Requirements
  - pip install -r requirements.txt
  - pip install .
  - pip install tensorflow==1.13.1 opencv-python
  - python -c "import cv2; print(cv2.getBuildInformation())"
  # codecov requirements
  - pip install Sphinx==1.8.2 sphinx_bootstrap_theme==0.6.5 m2r sphinx-automodapi
  # codecov requirements
  - pip install pytest pytest-cov hypothesis coverage codecov pytest-doctest-ellipsis-markers --upgrade

before_script:
  # prevent travis from timing out for slow processes
  - chmod +x docs/prevent_travis_timeout.sh
  - docs/prevent_travis_timeout.sh &
  - export PREVENT_TRAVIS_TIMEOUT_PID=$!
  # create a virtual webcam
  - gst-launch-1.0 videotestsrc pattern=smpte100 ! v4l2sink device=/dev/video0 &
  - export GSTREAMER_VIRTUAL_WEBCAM_PID=$!


script:
  # license enforcer
  - python enforcer.py
  # generate percent test coverage and a coverage report
  - py.test --cov=./imagepypelines tests/
  # running doctest on website examples & code snippets
  - py.test --cov=./imagepypelines --cov-append --doctest-glob="*.rst" --ignore=setup.py --ignore=tests/ --ignore=imagepypelies_gui/

after_script:
  - kill -9 $PREVENT_TRAVIS_TIMEOUT_PID
  - kill -9 &GSTREAMER_VIRTUAL_WEBCAM_PID

after_success:
  # upload coverage report
  - codecov
  # Building website
  - cd docs && make html && cd ..
  - cp CNAME docs/build/html/CNAME

deploy:
  # Website Deployment
  - provider: pages
    skip-cleanup: true
    github-token: $GITHUB_TOKEN
    keep-history: false
    local-dir: docs/build/html
    on:
      python: '3.6'
      branch: master

  - provider: pypi
    user: jmaggio14
    password: $PYPI_PASS
    on:
      branch: master
      tags: true
